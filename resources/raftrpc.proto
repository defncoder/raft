// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

option java_multiple_files = true;
option java_package = "raft.rpc";
option java_outer_classname = "RaftContainer";
option objc_class_prefix = "RRPC";

package rpc;

// Interface exported by the server.
service RaftRPC {
  // Append log entries
  //
  // Sent from leader to followers to append a list of log entries from leader to followers.
  //
  // AppendResponse is returned.
  rpc AppendEntries(AppendRequest) returns (AppendResponse) {}

  // Request for vote
  //
  // Sent from a candidate to all other machines requesting a vote for candidate.
  //
  // VoteResponse is returned.
  rpc RequestVote(VoteRequest) returns (VoteResponse) {}
}

// Specifies a single log entry.
message LogEntry {
  int64  log_index = 1;
  int64  term_number = 2;
  string command = 3;
}

// An AppendRequest from leader to followers.
message AppendRequest {
  int64  term = 1;
  string leaderId = 2;
  int64  prevLogIndex = 3;
  int64  prevLogTerm = 4;
  int64  leaderCommitIndex = 5;
  repeated LogEntry entries = 6;
}

// An AppendResult from followers to leader.
message AppendResponse {
  int64  term = 1;
  bool   success = 2;
}

message VoteRequest {
  int64  term = 1;
  string candidateId = 2;
  int64  lastLogIndex = 3;
  int64  lastLogTerm = 4;
}

message VoteResponse {
  int64  term = 1;
  bool   voteGranted = 2;
}
